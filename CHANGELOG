* Thu Nov 30 2017 Trevor Vaughan <tvaughan@onyxpoint.com> - 6.1.0-0
- Added the ability to ignore interfaces using the 'ignore' regex array
- Fixed issues with ignoring rules and added some optimization
- No longer apply IPTables rules in the optimization phase and simply wait for
  the downstream service to trigger

* Thu Aug 10 2017 Nick Markowski <nmarkowski@keywcorp.com> - 6.0.3-0
- Updated iptables::listen::tcp_stateful example to pass valid
  Iptables::DestPort types to dports

* Wed May 24 2017 Brandon Riden <brandon.riden@onyxpoint.com> - 6.0.2-0
- Added a workaround for Puppet 4.10 type issues
  - There was a bug in Puppet where all lookup() Hash keys were being converted
    into Strings even if they were another data type
  - This is fixed in Puppet > 4.10.2 but this patch will remain for backwards
    compatibility
- Update puppet dependency in metadata.json
- Remove OBE pe dependency in metadata.json

* Thu Jan 13 2017 Nick Miller <nick.miller@onyxpoint.com> - 6.0.1-0
- Added a feature to add resources via hiera

* Wed Jan 11 2017 Trevor Vaughan <tvaughan@onyxpoint.com> - 6.0.0-0
- Removed the legacy call to Facter in the 'xt_recent' 'set' provider

* Wed Dec 07 2016 Nick Markowski <nmarkowski@keywcorp.com> - 6.0.0-0
- Renamed the global catalyst 'client_nets' to 'trusted_nets'

* Wed Nov 09 2016 Liz Nemsick <lnemsick.simp@gmail.com> - 5.0.0-0
- Fixed bug in the set provider for the xt_recent type that required manual
  modifications to the permissions for the /sys/module/xt_recent/parameters/*
  files, in order for the scanblock capability to be enabled.
- Fixed bugs in the xt_recent type and its set provider that caused
  Puppet to believe /sys/module/xt_recent/parameters/ip_list_perms
  file content had changed when it had not.
- Eliminated use of deprecated Puppet.newtype
- Updated to compliance_markup version 2

* Fri Sep 30 2016 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.5-0
- Updated the ip6tables_optimize provider so that it works in Puppet 4

* Fri Aug 26 2016 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.4-0
- Ensure that the SELinux context on the init scripts is correct so that the
  runs are idempotent

* Thu Jul 07 2016 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.3-0
- Fixed an issue with the remote lookup regular expression processing in Ruby
  1.8

* Mon May 16 2016 Chris Tessmer <chris.tessmer@onyxpoint.com> - 4.1.2-0
- Sanitized fact references to run under `STRICT_VARIABLES=yes`

* Wed Apr 13 2016 Kendall Moore <kendall.moore@onyxpoint.com> - 4.1.1-0
- Changed default provider of services to redhat

* Tue Apr 12 2016 Kendall Moore <kendall.moore@onyxpoint.com> - 4.1.0-17
- Removed custom type deprecation warning

* Fri Feb 19 2016 Ralph Wright <ralph.wright@onyxpoint.com> - 4.1.0-16
- Added compliance function support

* Tue Jan 26 2016 Chris Tessmer <chris.tessmer@onypoint.com> - 4.1.0-15
- Normalized common static module assets

* Mon Nov 09 2015 Chris Tessmer <chris.tessmer@onypoint.com> - 4.1.0-14
- migration to simplib and simpcat (lib/ only)

* Mon Jul 27 2015 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-13
- Added an iptables::prevent_localhost_spoofing class to handle IPv6 spoofed
  communication.

* Wed Jul 08 2015 Chris Tessmer <chris.tessmer@onyxpoint.com> - 4.1.0-12
- Updated iptables::disable's default to look up 'use_iptables' from hiera.
- Fixed iptables::disable to disable management of IPv4 rules.

* Mon Apr 27 2015 Michael Riddle <mriddle@onyxpoint.com> - 4.1.0-11
- Implemented a workaround for ports being read in as valid ipv6 addresses on
  iptables lines that don't contain any ipaddress. Any iptables lines
  containing a port with no ipaddress would only validate as an ipv6 rule.

* Thu Apr 02 2015 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-10
- Fixed DNS resolution in the IPTables provider. Unfortunately, this never
  actually worked as implemented.

* Fri Jan 16 2015 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-9
- Changed puppet-server requirement to puppet

* Tue Aug 05 2014 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-8
- Changed all top-scope class variable calls to actual global
  variables. This isn't great, but there isn't an elegant way to do
  this inside Puppet right now.
- Update to fix the scenario where the /etc/sysconfig/ip*tables files
  don't exist.
- Fixed a typo where the ip6tables-retry script was really calling
  iptables.

* Tue Jul 15 2014 Kendall Moore <kmoore@keywcorp.com> - 4.1.0-7
- Added CentOS as a supported OS as part of CentOS 7 upgrade.

* Thu Jun 26 2014 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-6
- Provide for RHEL7 compatiblity.
- Added an iptables::disable option that will disable our IPTables
  enforcement by way of telling optimize to effectively noop.
- Rewrote most of the IPTables native type to be more maintainable.
- Added a new option iptables::authoritative which, when set, ties
  iptables_optimize to the iptables service. When not set, optimize
  will simply do what it can on the chains that it knows about. This
  is new and may need a bit more work on some edge cases.

* Sun Jun 22 2014 Kendall Moore <kmoore@keywcorp.com> - 4.1.0-5
- Removed MD5 file checksums for FIPS compliance.

* Tue Apr 29 2014 Kendall Moore <kmoore@keywcorp.com> - 4.1.0-4
- Updated the optimize code to ignore matches in both chains and jumps.

* Tue Apr 15 2014 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-4
- Ensure that DNS lookups are sorted so that iptables does not continually restart.
- Moved the default rules out of sec and into iptables::base_rules.
- Updated the iptables class to call out to base_rules and scanblock based on
  parameters.

* Thu Feb 13 2014 Kendall Moore <kmoore@keywcorp.com> - 4.1.0-3
- Updated all string booleans to native booleans in manifests and templates.

* Wed Dec 11 2013 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-2
- Updated the rule comparison code in iptables_rule to properly compare the new
  and old rules.
- Properly handle blank lines in the /etc/sysconfig/ip*tables files.
- Fixed the providers to properly handle the case where /etc/sysconfig/iptables
  is absent and/or the commands are at alternate paths.

* Thu Nov 21 2013 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.1.0-1
- Made several changes to the iptables_rule custom type to:
  * Now resolves all hostnames in the rules by default. This can be
    disabled but may cause issues with the autodiscovery between ipv4
  * Ensure that the -A header is not prepended to a rule if it already
    has a header value.
  * Ensure that no rules attempt to be added if they belong to a table
    that is not valid for the given ip*tables type.

* Tue Nov 19 2013 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.0.1-1
- Fixed an issue in iptables_optimize where a situation could arize
  that would cause the table definitions to not be properly loaded and
  the iptables reload to fail.

* Thu Oct 10 2013 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.0.1-0
- Removed all calls to the Puppet FileLocking classes which get removed in
  later versions of Puppet.
- Added an iptables::scanblock class which will work to
  semi-permanently block any IP address that is prodding your host.
  This is mainly intended for Internet facing hosts.
- The IPTables module custom types were almost completely rewritten.
- The ip*tables_requires_restart facts are gone and you can now pass
  an array of regular expressions to the 'ignore' variable of the
  iptables class and have it ignore running rules with targets
  matching any of the expressions when deciding to restart ip*tables.

* Fri Oct 04 2013 Nick Markowski <nmarkowski@keywcorp.com> - 4.0.0-1
- Updated template to reference instance variables with @

* Wed Jul 31 2013 Trevor Vaughan <tvaughan@onyxpoint.com> - 4.0.0-0
- CRIT: There was a severe bug in allow_all_services.erb that would
  make any call to iptables::add_all_listen open IPTables to all
  hosts. This has been corrected.
- Updated the ip*tables_requires_restart facts to only select on the
  -j options no matter what order they are in.
- Added a call to 'validate_net_list' to all iptables defines so that
  incorrect client_nets arrays fail hard.

* Tue Jan 08 2013 Maintenance
2.1.0-6
- Added two new facts: iptables_requires_restart and ip6tables_requires_restart
  that replace the ip(6)?tables_running and ip(6)?tables_saved facts. The old
  facts simply were not accurate enough for complex situations.
- Update to fix the ability of the iptables rule mechanisms to handle rules
  with over 15 ports.
- Updated to require pupmod-common >= 2.1.1-2 so that upgrading an old
  system works properly.

* Fri Oct 19 2012 Maintenance
2.1.0-5
- Removed one line in the iptables_rule type that caused the type to fail if
  ipv6 wasn't enabled on the target system.

* Tue Sep 18 2012 Maintenance
2.1.0-4
- Updated all references of /etc/modprobe.conf to /etc/modprobe.d/00_simp_blacklist.conf
  as modprobe.conf is now deprecated.

* Fri Aug 17 2012 Maintenance
2.1.0-3
- Moved all dynamic resource creation and checking to 'finish' instead of
  'initialize' in the custom type.

* Tue Jul 24 2012 Maintenance
2.1.0-2
- Fix all instances of 'IPT:' instead of "IPT:"

* Tue Jun 26 2012 Maintenance
2.1.0-1
- Trigger ip6?tables restart when rules change on the host regardless of the
  count.

* Thu Jun 07 2012 Maintenance
2.1.0-0
- Ensure that Arrays in templates are flattened.
- Call facts as instance variables.
- Rewrote the iptables templates to more efficiently handle checking for the
  'any' case.
- Moved mit-tests to /usr/share/simp...
- This is a massive rewrite of the iptables module that adds native
  support for ip6tables as well as some magical rule munging that
  should make life easier.
- The old methods have been kept around for backward compatibliity
  purposes.
- Rules are now also optimized before being written and ip(6)tables
  will try to fall back to the previous configuration upon restart.
- This is *not* the Puppet Labs module since that one a) doesn't let
  you add artibrary rules and b) modifies rules on the fly which
  turned out to be quite dangerous at times. This is more of an
  all-or-nothing approach.
- More will be added to the native type as time allows.

* Fri Mar 02 2012 Maintenance
2.0.0-6
- Added a startup script, iptables-retry to try and restart iptables after
  networking starts just in case a rule was added with an fqdn.
- Updated the iptables startup script to the latest version.
- Reformatted all code to meet Puppet Labs' guidance.
- Improved test stubs.
- Added a check in the custom facts to not call iptables if service iptables
  status doesn't return anything.

* Mon Dec 26 2011 Maintenance
2.0.0-5
- Updated the spec file to not require a separate file list.
- Scoped all of the top level variables.

* Mon Dec 05 2011 Maintenance
2.0.0-4
- No longer print the status messages when nothing needs to happen. These can
  be enabled using the $class_debug variable.

* Mon Oct 10 2011 Maintenance
2.0.0-3
- Updated to put quotes around everything that need it in a comparison
  statement so that puppet > 2.5 doesn't explode with an undef error.

* Mon Sep 12 2011 Maintenance
2.0.0-2
- Ensure that the iptables_running fact does not do DNS lookups.

* Mon Apr 18 2011 Maintenance - 2.0.0-1
- Changed puppet://$puppet_server/ to puppet:///
- Updated to use concat_build and concat_fragment types.

* Tue Jan 11 2011 Maintenance
2.0.0-0
- Refactored for SIMP-2.0.0-alpha release

* Tue Oct 26 2010 Maintenance - 1-1
- Converting all spec files to check for directories prior to copy.

* Fri May 21 2010 Maintenance
1.0-0
- Doc update and code refactor

* Fri May 07 2010 Maintenance
0.1-20
- Added a fact, iptables_running that returns the number of rules in the
  running iptables.
- Added a fact, iptables_saved that returns the number of rules in the saved
  iptables rule set.
- Added a check to see if the running IPTables ruleset has fewer rules than the
  specified IPTables ruleset. If it does, have IPTables reload.

* Sat Feb 13 2010 Maintenance
0.1-19
- Moved the ESTABLISHED/RELATED rule to the top of the stack.

* Thu Jan 28 2010 Maintenance
0.1-18
- The IPTables service now uses iptables-restore instead of 'service iptables
  restart' to restart iptables. This means that no state will be lost due to
  spurious iptables restarts.

* Mon Nov 02 2009 Maintenance
0.1-17
- Added the ability to have custom comments above each entry.
- Now remove any subsequent duplicate entries comments will, of course, cause
  problems with this.
